{"version":3,"sources":["public/src/modules/translator.js"],"names":["factory","loadClient","language","namespace","Promise","resolve","jQuery","getJSON","config","relative_path","warn","environment","console","bind","define","amd","string","module","exports","languages","require","global","env","winston","a","loadServer","reject","get","err","data","window","translator","load","assign","Object","extend","classCallCheck","instance","Constructor","TypeError","Translator","self","this","modules","keys","moduleFactories","map","reduce","prev","elem","lang","translations","prototype","translate","str","validText","validTextRegex","RegExp","invalidTextRegex","cursor","lastBreak","len","length","toTranslate","inToken","split","text","arr","i","brk","level","slice","push","trim","sliced","textBeforeColonFound","colonFound","textAfterColonFound","commaAfterNameFound","test","currentSlice","result","name","args","backup","translateKey","last","all","then","translated","join","key","translation","getTranslation","argsToTranslate","arg","collapseWhitespace","decodeHTMLEntities","escapeHTML","s","replace","translatedArgs","out","forEach","escaped","catch","x","descendantTextNodes","node","textNodes","helper","nodeType","c","childNodes","l","translateInPlace","element","attributes","nodes","nodeValue","attrNodes","attr","tuples","Array","call","querySelectorAll","el","concat","attrText","getAttribute","ref","translatedAttrs","html","$","replaceWith","setAttribute","getLanguage","utils","params","userLang","defaultLang","meta","create","cache","registerModule","removePatterns","sub","escape","unescape","compile","arguments","adaptor","callback","cb","String","stack","output","error","addTranslation","getTranslations","toggleTimeagoShorthand","tmp","timeago","settings","strings","timeagoShort","prepareDOM","languageCode","userLangToTimeagoCode","getScript","done","value","css"],"mappings":"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","file":"public/src/modules/translator.js","sourcesContent":["'use strict';\r\n\r\n(function (factory) {\r\n\tfunction loadClient(language, namespace) {\r\n\t\treturn Promise.resolve(jQuery.getJSON(config.relative_path + '/assets/language/' + language + '/' + namespace + '.json?' + config['cache-buster']));\r\n\t}\r\n\tvar warn = function () {};\r\n\tif (typeof config === 'object' && config.environment === 'development') {\r\n\t\twarn = console.warn.bind(console);\r\n\t}\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD. Register as a named module\r\n\t\tdefine('translator', ['string'], function (string) {\r\n\t\t\treturn factory(string, loadClient, warn);\r\n\t\t});\r\n\t} else if (typeof module === 'object' && module.exports) {\r\n\t\t// Node\r\n\t\t(function () {\r\n\t\t\tvar languages = require('../../../src/languages');\r\n\r\n\t\t\tif (global.env === 'development') {\r\n\t\t\t\tvar winston = require('winston');\r\n\t\t\t\twarn = function (a) {\r\n\t\t\t\t\twinston.warn(a);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tfunction loadServer(language, namespace) {\r\n\t\t\t\treturn new Promise(function (resolve, reject) {\r\n\t\t\t\t\tlanguages.get(language, namespace, function (err, data) {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresolve(data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tmodule.exports = factory(require('string'), loadServer, warn);\r\n\t\t}());\r\n\t} else {\r\n\t\twindow.translator = factory(window.string, loadClient, warn);\r\n\t}\r\n}(function (string, load, warn) {\r\n\tvar assign = Object.assign || jQuery.extend;\r\n\tfunction classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\r\n\r\n\tvar Translator = (function () {\r\n\t\t/**\r\n\t\t * Construct a new Translator object\r\n\t\t * @param {string} language - Language code for this translator instance\r\n\t\t * @exports translator.Translator\r\n\t\t */\r\n\t\tfunction Translator(language) {\r\n\t\t\tvar self = this;\r\n\t\t\tclassCallCheck(self, Translator);\r\n\r\n\t\t\tif (!language) {\r\n\t\t\t\tthrow new TypeError('Parameter `language` must be a language string. Received ' + language + (language === '' ? '(empty string)' : ''));\r\n\t\t\t}\r\n\r\n\t\t\tself.modules = Object.keys(Translator.moduleFactories).map(function (namespace) {\r\n\t\t\t\tvar factory = Translator.moduleFactories[namespace];\r\n\t\t\t\treturn [namespace, factory(language)];\r\n\t\t\t}).reduce(function (prev, elem) {\r\n\t\t\t\tvar namespace = elem[0];\r\n\t\t\t\tvar module = elem[1];\r\n\t\t\t\tprev[namespace] = module;\r\n\r\n\t\t\t\treturn prev;\r\n\t\t\t}, {});\r\n\r\n\t\t\tself.lang = language;\r\n\t\t\tself.translations = {};\r\n\t\t}\r\n\r\n\t\tTranslator.prototype.load = load;\r\n\r\n\t\t/**\r\n\t\t * Parse the translation instructions into the language of the Translator instance\r\n\t\t * @param {string} str - Source string\r\n\t\t * @returns {Promise<string>}\r\n\t\t */\r\n\t\tTranslator.prototype.translate = function translate(str) {\r\n\t\t\t// regex for valid text in namespace / key\r\n\t\t\tvar validText = 'a-zA-Z0-9\\\\-_.\\\\/';\r\n\t\t\tvar validTextRegex = new RegExp('[' + validText + ']');\r\n\t\t\tvar invalidTextRegex = new RegExp('[^' + validText + '\\\\]]');\r\n\r\n\t\t\t// current cursor position\r\n\t\t\tvar cursor = 0;\r\n\t\t\t// last break of the input string\r\n\t\t\tvar lastBreak = 0;\r\n\t\t\t// length of the input string\r\n\t\t\tvar len = str.length;\r\n\t\t\t// array to hold the promises for the translations\r\n\t\t\t// and the strings of untranslated text in between\r\n\t\t\tvar toTranslate = [];\r\n\r\n\t\t\t// to store the state of if we're currently in a top-level token for later\r\n\t\t\tvar inToken = false;\r\n\r\n\t\t\t// split a translator string into an array of tokens\r\n\t\t\t// but don't split by commas inside other translator strings\r\n\t\t\tfunction split(text) {\r\n\t\t\t\tvar len = text.length;\r\n\t\t\t\tvar arr = [];\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\tvar brk = 0;\r\n\t\t\t\tvar level = 0;\r\n\r\n\t\t\t\twhile (i + 2 <= len) {\r\n\t\t\t\t\tif (text.slice(i, i + 2) === '[[') {\r\n\t\t\t\t\t\tlevel += 1;\r\n\t\t\t\t\t\ti += 1;\r\n\t\t\t\t\t} else if (text.slice(i, i + 2) === ']]') {\r\n\t\t\t\t\t\tlevel -= 1;\r\n\t\t\t\t\t\ti += 1;\r\n\t\t\t\t\t} else if (level === 0 && text[i] === ',' && text[i - 1] !== '\\\\') {\r\n\t\t\t\t\t\tarr.push(text.slice(brk, i).trim());\r\n\t\t\t\t\t\ti += 1;\r\n\t\t\t\t\t\tbrk = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti += 1;\r\n\t\t\t\t}\r\n\t\t\t\tarr.push(text.slice(brk, i + 1).trim());\r\n\t\t\t\treturn arr;\r\n\t\t\t}\r\n\r\n\t\t\t// the loooop, we'll go to where the cursor\r\n\t\t\t// is equal to the length of the string since\r\n\t\t\t// slice doesn't include the ending index\r\n\t\t\twhile (cursor + 2 <= len) {\r\n\t\t\t\t// if the current position in the string looks\r\n\t\t\t\t// like the beginning of a translation string\r\n\t\t\t\tif (str.slice(cursor, cursor + 2) === '[[') {\r\n\t\t\t\t\t// split the string from the last break\r\n\t\t\t\t\t// to the character before the cursor\r\n\t\t\t\t\t// add that to the result array\r\n\t\t\t\t\ttoTranslate.push(str.slice(lastBreak, cursor));\r\n\t\t\t\t\t// set the cursor position past the beginning\r\n\t\t\t\t\t// brackets of the translation string\r\n\t\t\t\t\tcursor += 2;\r\n\t\t\t\t\t// set the last break to our current\r\n\t\t\t\t\t// spot since we just broke the string\r\n\t\t\t\t\tlastBreak = cursor;\r\n\t\t\t\t\t// we're in a token now\r\n\t\t\t\t\tinToken = true;\r\n\r\n\t\t\t\t\t// the current level of nesting of the translation strings\r\n\t\t\t\t\tvar level = 0;\r\n\t\t\t\t\tvar sliced;\r\n\t\t\t\t\t// validating the current string is actually a translation\r\n\t\t\t\t\tvar textBeforeColonFound = false;\r\n\t\t\t\t\tvar colonFound = false;\r\n\t\t\t\t\tvar textAfterColonFound = false;\r\n\t\t\t\t\tvar commaAfterNameFound = false;\r\n\r\n\t\t\t\t\twhile (cursor + 2 <= len) {\r\n\t\t\t\t\t\tsliced = str.slice(cursor, cursor + 2);\r\n\t\t\t\t\t\t// found some text after the double bracket,\r\n\t\t\t\t\t\t// so this is probably a translation string\r\n\t\t\t\t\t\tif (!textBeforeColonFound && validTextRegex.test(sliced[0])) {\r\n\t\t\t\t\t\t\ttextBeforeColonFound = true;\r\n\t\t\t\t\t\t\tcursor += 1;\r\n\t\t\t\t\t\t// found a colon, so this is probably a translation string\r\n\t\t\t\t\t\t} else if (textBeforeColonFound && !colonFound && sliced[0] === ':') {\r\n\t\t\t\t\t\t\tcolonFound = true;\r\n\t\t\t\t\t\t\tcursor += 1;\r\n\t\t\t\t\t\t// found some text after the colon,\r\n\t\t\t\t\t\t// so this is probably a translation string\r\n\t\t\t\t\t\t} else if (colonFound && !textAfterColonFound && validTextRegex.test(sliced[0])) {\r\n\t\t\t\t\t\t\ttextAfterColonFound = true;\r\n\t\t\t\t\t\t\tcursor += 1;\r\n\t\t\t\t\t\t} else if (textAfterColonFound && !commaAfterNameFound && sliced[0] === ',') {\r\n\t\t\t\t\t\t\tcommaAfterNameFound = true;\r\n\t\t\t\t\t\t\tcursor += 1;\r\n\t\t\t\t\t\t// a space or comma was found before the name\r\n\t\t\t\t\t\t// this isn't a translation string, so back out\r\n\t\t\t\t\t\t} else if (!(textBeforeColonFound && colonFound && textAfterColonFound && commaAfterNameFound) &&\r\n\t\t\t\t\t\t\t\tinvalidTextRegex.test(sliced[0])) {\r\n\t\t\t\t\t\t\tcursor += 1;\r\n\t\t\t\t\t\t\tlastBreak -= 2;\r\n\t\t\t\t\t\t\t// no longer in a token\r\n\t\t\t\t\t\t\tinToken = false;\r\n\t\t\t\t\t\t\tif (level > 0) {\r\n\t\t\t\t\t\t\t\tlevel -= 1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if we're at the beginning of another translation string,\r\n\t\t\t\t\t\t// we're nested, so add to our level\r\n\t\t\t\t\t\t} else if (sliced === '[[') {\r\n\t\t\t\t\t\t\tlevel += 1;\r\n\t\t\t\t\t\t\tcursor += 2;\r\n\t\t\t\t\t\t// if we're at the end of a translation string\r\n\t\t\t\t\t\t} else if (sliced === ']]') {\r\n\t\t\t\t\t\t\t// if we're at the base level, then this is the end\r\n\t\t\t\t\t\t\tif (level === 0) {\r\n\t\t\t\t\t\t\t\t// so grab the name and args\r\n\t\t\t\t\t\t\t\tvar currentSlice = str.slice(lastBreak, cursor);\r\n\t\t\t\t\t\t\t\tvar result = split(currentSlice);\r\n\t\t\t\t\t\t\t\tvar name = result[0];\r\n\t\t\t\t\t\t\t\tvar args = result.slice(1);\r\n\r\n\t\t\t\t\t\t\t\t// make a backup based on the raw string of the token\r\n\t\t\t\t\t\t\t\t// if there are arguments to the token\r\n\t\t\t\t\t\t\t\tvar backup = '';\r\n\t\t\t\t\t\t\t\tif (args && args.length) {\r\n\t\t\t\t\t\t\t\t\tbackup = this.translate(currentSlice);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// add the translation promise to the array\r\n\t\t\t\t\t\t\t\ttoTranslate.push(this.translateKey(name, args, backup));\r\n\t\t\t\t\t\t\t\t// skip past the ending brackets\r\n\t\t\t\t\t\t\t\tcursor += 2;\r\n\t\t\t\t\t\t\t\t// set this as our last break\r\n\t\t\t\t\t\t\t\tlastBreak = cursor;\r\n\t\t\t\t\t\t\t\t// and we're no longer in a translation string,\r\n\t\t\t\t\t\t\t\t// so continue with the main loop\r\n\t\t\t\t\t\t\t\tinToken = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// otherwise we lower the level\r\n\t\t\t\t\t\t\tlevel -= 1;\r\n\t\t\t\t\t\t\t// and skip past the ending brackets\r\n\t\t\t\t\t\t\tcursor += 2;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// otherwise just move to the next character\r\n\t\t\t\t\t\t\tcursor += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// move to the next character\r\n\t\t\t\tcursor += 1;\r\n\t\t\t}\r\n\r\n\t\t\t// ending string of source\r\n\t\t\tvar last = str.slice(lastBreak);\r\n\r\n\t\t\t// if we were mid-token, treat it as invalid\r\n\t\t\tif (inToken) {\r\n\t\t\t\tlast = this.translate(last);\r\n\t\t\t}\r\n\r\n\t\t\t// add the remaining text after the last translation string\r\n\t\t\ttoTranslate.push(last);\r\n\r\n\t\t\t// and return a promise for the concatenated translated string\r\n\t\t\treturn Promise.all(toTranslate).then(function (translated) {\r\n\t\t\t\treturn translated.join('');\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Translates a specific key and array of arguments\r\n\t\t * @param {string} name - Translation key (ex. 'global:home')\r\n\t\t * @param {string[]} args - Arguments for `%1`, `%2`, etc\r\n\t\t * @param {string|Promise<string>} backup - Text to use in case the key can't be found\r\n\t\t * @returns {Promise<string>}\r\n\t\t */\r\n\t\tTranslator.prototype.translateKey = function translateKey(name, args, backup) {\r\n\t\t\tvar self = this;\r\n\r\n\t\t\tvar result = name.split(':', 2);\r\n\t\t\tvar namespace = result[0];\r\n\t\t\tvar key = result[1];\r\n\r\n\t\t\tif (self.modules[namespace]) {\r\n\t\t\t\treturn Promise.resolve(self.modules[namespace](key, args));\r\n\t\t\t}\r\n\r\n\t\t\tif (namespace && !key) {\r\n\t\t\t\twarn('Missing key in translation token \"' + name + '\"');\r\n\t\t\t\treturn Promise.resolve('[[' + namespace + ']]');\r\n\t\t\t}\r\n\r\n\t\t\tvar translation = this.getTranslation(namespace, key);\r\n\t\t\treturn translation.then(function (translated) {\r\n\t\t\t\t// check if the translation is missing first\r\n\t\t\t\tif (!translated) {\r\n\t\t\t\t\twarn('Missing translation \"' + name + '\"');\r\n\t\t\t\t\treturn backup || key;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar argsToTranslate = args.map(function (arg) {\r\n\t\t\t\t\treturn string(arg).collapseWhitespace().decodeHTMLEntities().escapeHTML().s.replace(/&amp;/g, '&');\r\n\t\t\t\t}).map(function (arg) {\r\n\t\t\t\t\treturn self.translate(arg);\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn Promise.all(argsToTranslate).then(function (translatedArgs) {\r\n\t\t\t\t\tvar out = translated;\r\n\t\t\t\t\ttranslatedArgs.forEach(function (arg, i) {\r\n\t\t\t\t\t\tvar escaped = arg.replace(/%(?=\\d)/g, '&#37;').replace(/\\\\,/g, '&#44;');\r\n\t\t\t\t\t\tout = out.replace(new RegExp('%' + (i + 1), 'g'), escaped);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn out;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Load translation file (or use a cached version), and optionally return the translation of a certain key\r\n\t\t * @param {string} namespace - The file name of the translation namespace\r\n\t\t * @param {string} [key] - The key of the specific translation to getJSON\r\n\t\t * @returns {Promise<{ [key: string]: string }>|Promise<string>}\r\n\t\t */\r\n\t\tTranslator.prototype.getTranslation = function getTranslation(namespace, key) {\r\n\t\t\tvar translation;\r\n\t\t\tif (!namespace) {\r\n\t\t\t\twarn('[translator] Parameter `namespace` is ' + namespace + (namespace === '' ? '(empty string)' : ''));\r\n\t\t\t\ttranslation = Promise.resolve({});\r\n\t\t\t} else {\r\n\t\t\t\tthis.translations[namespace] = this.translations[namespace] || this.load(this.lang, namespace).catch(function () { return {}; });\r\n\t\t\t\ttranslation = this.translations[namespace];\r\n\t\t\t}\r\n\r\n\t\t\tif (key) {\r\n\t\t\t\treturn translation.then(function (x) {\r\n\t\t\t\t\treturn x[key];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn translation;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @param {Node} node\r\n\t\t * @returns {Node[]}\r\n\t\t */\r\n\t\tfunction descendantTextNodes(node) {\r\n\t\t\tvar textNodes = [];\r\n\r\n\t\t\tfunction helper(node) {\r\n\t\t\t\tif (node.nodeType === 3) {\r\n\t\t\t\t\ttextNodes.push(node);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var i = 0, c = node.childNodes, l = c.length; i < l; i += 1) {\r\n\t\t\t\t\t\thelper(c[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thelper(node);\r\n\t\t\treturn textNodes;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Recursively translate a DOM element in place\r\n\t\t * @param {Element} element - Root element to translate\r\n\t\t * @param {string[]} [attributes] - Array of node attributes to translate\r\n\t\t * @returns {Promise<void>}\r\n\t\t */\r\n\t\tTranslator.prototype.translateInPlace = function translateInPlace(element, attributes) {\r\n\t\t\tattributes = attributes || ['placeholder', 'title'];\r\n\r\n\t\t\tvar nodes = descendantTextNodes(element);\r\n\t\t\tvar text = nodes.map(function (node) {\r\n\t\t\t\treturn node.nodeValue;\r\n\t\t\t}).join('  ||  ');\r\n\r\n\t\t\tvar attrNodes = attributes.reduce(function (prev, attr) {\r\n\t\t\t\tvar tuples = Array.prototype.map.call(element.querySelectorAll('[' + attr + '*=\"[[\"]'), function (el) {\r\n\t\t\t\t\treturn [attr, el];\r\n\t\t\t\t});\r\n\t\t\t\treturn prev.concat(tuples);\r\n\t\t\t}, []);\r\n\t\t\tvar attrText = attrNodes.map(function (node) {\r\n\t\t\t\treturn node[1].getAttribute(node[0]);\r\n\t\t\t}).join('  ||  ');\r\n\r\n\t\t\treturn Promise.all([\r\n\t\t\t\tthis.translate(text),\r\n\t\t\t\tthis.translate(attrText),\r\n\t\t\t]).then(function (ref) {\r\n\t\t\t\tvar translated = ref[0];\r\n\t\t\t\tvar translatedAttrs = ref[1];\r\n\t\t\t\tif (translated) {\r\n\t\t\t\t\ttranslated.split('  ||  ').forEach(function (html, i) {\r\n\t\t\t\t\t\t$(nodes[i]).replaceWith(html);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tif (translatedAttrs) {\r\n\t\t\t\t\ttranslatedAttrs.split('  ||  ').forEach(function (text, i) {\r\n\t\t\t\t\t\tattrNodes[i][1].setAttribute(attrNodes[i][0], text);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get the language of the current environment, falling back to defaults\r\n\t\t * @returns {string}\r\n\t\t */\r\n\t\tTranslator.getLanguage = function getLanguage() {\r\n\t\t\tvar lang;\r\n\r\n\t\t\tif (typeof window === 'object' && window.config && window.utils) {\r\n\t\t\t\tlang = utils.params().lang || config.userLang || config.defaultLang || 'en-GB';\r\n\t\t\t} else {\r\n\t\t\t\tvar meta = require('../../../src/meta');\r\n\t\t\t\tlang = meta.config.defaultLang || 'en-GB';\r\n\t\t\t}\r\n\r\n\t\t\treturn lang;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Create and cache a new Translator instance, or return a cached one\r\n\t\t * @param {string} [language] - ('en-GB') Language string\r\n\t\t * @returns {Translator}\r\n\t\t */\r\n\t\tTranslator.create = function create(language) {\r\n\t\t\tif (!language) {\r\n\t\t\t\tlanguage = Translator.getLanguage();\r\n\t\t\t}\r\n\r\n\t\t\tTranslator.cache[language] = Translator.cache[language] || new Translator(language);\r\n\r\n\t\t\treturn Translator.cache[language];\r\n\t\t};\r\n\r\n\t\tTranslator.cache = {};\r\n\r\n\t\t/**\r\n\t\t * Register a custom module to handle translations\r\n\t\t * @param {string} namespace - Namespace to handle translation for\r\n\t\t * @param {Function} factory - Function to return the translation function for this namespace\r\n\t\t */\r\n\t\tTranslator.registerModule = function registerModule(namespace, factory) {\r\n\t\t\tTranslator.moduleFactories[namespace] = factory;\r\n\r\n\t\t\tObject.keys(Translator.cache).forEach(function (key) {\r\n\t\t\t\tvar translator = Translator.cache[key];\r\n\t\t\t\ttranslator.modules[namespace] = factory(translator.lang);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tTranslator.moduleFactories = {};\r\n\r\n\t\t/**\r\n\t\t * Remove the translator patterns from text\r\n\t\t * @param {string} text\r\n\t\t * @returns {string}\r\n\t\t */\r\n\t\tTranslator.removePatterns = function removePatterns(text) {\r\n\t\t\tvar len = text.length;\r\n\t\t\tvar cursor = 0;\r\n\t\t\tvar lastBreak = 0;\r\n\t\t\tvar level = 0;\r\n\t\t\tvar out = '';\r\n\t\t\tvar sub;\r\n\r\n\t\t\twhile (cursor < len) {\r\n\t\t\t\tsub = text.slice(cursor, cursor + 2);\r\n\t\t\t\tif (sub === '[[') {\r\n\t\t\t\t\tif (level === 0) {\r\n\t\t\t\t\t\tout += text.slice(lastBreak, cursor);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlevel += 1;\r\n\t\t\t\t\tcursor += 2;\r\n\t\t\t\t} else if (sub === ']]') {\r\n\t\t\t\t\tlevel -= 1;\r\n\t\t\t\t\tcursor += 2;\r\n\t\t\t\t\tif (level === 0) {\r\n\t\t\t\t\t\tlastBreak = cursor;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcursor += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tout += text.slice(lastBreak, cursor);\r\n\t\t\treturn out;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Escape translator patterns in text\r\n\t\t * @param {string} text\r\n\t\t * @returns {string}\r\n\t\t */\r\n\t\tTranslator.escape = function escape(text) {\r\n\t\t\treturn typeof text === 'string' ? text.replace(/\\[\\[/g, '&lsqb;&lsqb;').replace(/\\]\\]/g, '&rsqb;&rsqb;') : text;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Unescape escaped translator patterns in text\r\n\t\t * @param {string} text\r\n\t\t * @returns {string}\r\n\t\t */\r\n\t\tTranslator.unescape = function unescape(text) {\r\n\t\t\treturn typeof text === 'string' ? text.replace(/&lsqb;|\\\\\\[/g, '[').replace(/&rsqb;|\\\\\\]/g, ']') : text;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Construct a translator pattern\r\n\t\t * @param {string} name - Translation name\r\n\t\t * @param {...string} arg - Optional argument for the pattern\r\n\t\t */\r\n\t\tTranslator.compile = function compile() {\r\n\t\t\tvar args = Array.prototype.slice.call(arguments, 0).map(function (text) {\r\n\t\t\t\t// escape commas and percent signs in arguments\r\n\t\t\t\treturn text.replace(/%/g, '&#37;').replace(/,/g, '&#44;');\r\n\t\t\t});\r\n\r\n\t\t\treturn '[[' + args.join(', ') + ']]';\r\n\t\t};\r\n\r\n\t\treturn Translator;\r\n\t}());\r\n\r\n\t/**\r\n\t * @exports translator\r\n\t */\r\n\tvar adaptor = {\r\n\t\t/**\r\n\t\t * The Translator class\r\n\t\t */\r\n\t\tTranslator: Translator,\r\n\r\n\t\tcompile: Translator.compile,\r\n\t\tescape: Translator.escape,\r\n\t\tunescape: Translator.unescape,\r\n\t\tgetLanguage: Translator.getLanguage,\r\n\r\n\t\t/**\r\n\t\t * Legacy translator function for backwards compatibility\r\n\t\t */\r\n\t\ttranslate: function translate(text, language, callback) {\r\n\t\t\t// TODO: deprecate?\r\n\r\n\t\t\tvar cb = callback;\r\n\t\t\tvar lang = language;\r\n\t\t\tif (typeof language === 'function') {\r\n\t\t\t\tcb = language;\r\n\t\t\t\tlang = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (!(typeof text === 'string' || text instanceof String) || text === '') {\r\n\t\t\t\treturn cb('');\r\n\t\t\t}\r\n\r\n\t\t\tTranslator.create(lang).translate(text).catch(function (err) {\r\n\t\t\t\twarn('Translation failed: ' + err.stack);\r\n\t\t\t}).then(function (output) {\r\n\t\t\t\tcb(output);\r\n\t\t\t}).catch(function (err) {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add translations to the cache\r\n\t\t */\r\n\t\taddTranslation: function addTranslation(language, namespace, translation) {\r\n\t\t\tTranslator.create(language).getTranslation(namespace).then(function (translations) {\r\n\t\t\t\tassign(translations, translation);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get the translations object\r\n\t\t */\r\n\t\tgetTranslations: function getTranslations(language, namespace, callback) {\r\n\t\t\tcallback = callback || function () {};\r\n\t\t\tTranslator.create(language).getTranslation(namespace).then(callback);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Alias of getTranslations\r\n\t\t */\r\n\t\tload: function load(language, namespace, callback) {\r\n\t\t\tadaptor.getTranslations(language, namespace, callback);\r\n\t\t},\r\n\r\n\t\ttoggleTimeagoShorthand: function toggleTimeagoShorthand() {\r\n\t\t\tvar tmp = assign({}, jQuery.timeago.settings.strings);\r\n\t\t\tjQuery.timeago.settings.strings = assign({}, adaptor.timeagoShort);\r\n\t\t\tadaptor.timeagoShort = assign({}, tmp);\r\n\t\t},\r\n\t\tprepareDOM: function prepareDOM() {\r\n\t\t\t// Load the appropriate timeago locale file,\r\n\t\t\t// and correct NodeBB language codes to timeago codes, if necessary\r\n\t\t\tvar languageCode = utils.userLangToTimeagoCode(config.userLang);\r\n\r\n\t\t\tadaptor.timeagoShort = assign({}, jQuery.timeago.settings.strings);\r\n\r\n\t\t\tjQuery.getScript(config.relative_path + '/assets/vendor/jquery/timeago/locales/jquery.timeago.' + languageCode + '-short.js').done(function () {\r\n\t\t\t\t// Switch back to long-form\r\n\t\t\t\tadaptor.toggleTimeagoShorthand();\r\n\t\t\t});\r\n\r\n\t\t\t// Add directional code if necessary\r\n\t\t\tadaptor.translate('[[language:dir]]', function (value) {\r\n\t\t\t\tif (value && !$('html').attr('data-dir')) {\r\n\t\t\t\t\tjQuery('html').css('direction', value).attr('data-dir', value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t};\r\n\r\n\treturn adaptor;\r\n}));\r\n"]}