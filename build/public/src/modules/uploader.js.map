{"version":3,"sources":["public/src/modules/uploader.js"],"names":["define","translator","module","open","route","params","fileSize","callback","console","warn","show","data","hasOwnProperty","undefined","parseInt","parseModal","showHelp","title","description","button","accept","replace","uploadModal","$","modal","on","remove","uploadForm","find","attr","val","JSON","stringify","this","addClass","submit","onSubmit","hideAlerts","showAlert","type","message","removeClass","translateText","css","fileInput","hasValidFileSize","ajaxSubmit","headers","x-csrf-token","config","csrf_token","error","xhr","maybeParse","responseJSON","statusText","status","uploadProgress","event","position","total","percent","success","response","url","setTimeout","tplVals","templates","parse","html","translate","parseJSON","e","fileElement","maxSize","window","FileReader","files","size"],"mappings":"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","file":"public/src/modules/uploader.js","sourcesContent":["'use strict';\r\n\r\n\r\ndefine('uploader', ['translator'], function (translator) {\r\n\tvar module = {};\r\n\r\n\tmodule.open = function (route, params, fileSize, callback) {\r\n\t\tconsole.warn('[uploader] uploader.open() is deprecated, please use uploader.show() instead, and pass parameters as a singe option with callback, e.g. uploader.show({}, callback);');\r\n\t\tmodule.show({\r\n\t\t\troute: route,\r\n\t\t\tparams: params,\r\n\t\t\tfileSize: fileSize,\r\n\t\t}, callback);\r\n\t};\r\n\r\n\tmodule.show = function (data, callback) {\r\n\t\tvar fileSize = data.hasOwnProperty('fileSize') && data.fileSize !== undefined ? parseInt(data.fileSize, 10) : false;\r\n\t\tparseModal({\r\n\t\t\tshowHelp: data.hasOwnProperty('showHelp') && data.showHelp !== undefined ? data.showHelp : true,\r\n\t\t\tfileSize: fileSize,\r\n\t\t\ttitle: data.title || '[[global:upload_file]]',\r\n\t\t\tdescription: data.description || '',\r\n\t\t\tbutton: data.button || '[[global:upload]]',\r\n\t\t\taccept: data.accept ? data.accept.replace(/,/g, '&#44; ') : '',\r\n\t\t}, function (uploadModal) {\r\n\t\t\tuploadModal = $(uploadModal);\r\n\r\n\t\t\tuploadModal.modal('show');\r\n\t\t\tuploadModal.on('hidden.bs.modal', function () {\r\n\t\t\t\tuploadModal.remove();\r\n\t\t\t});\r\n\r\n\t\t\tvar uploadForm = uploadModal.find('#uploadForm');\r\n\t\t\tuploadForm.attr('action', data.route);\r\n\t\t\tuploadForm.find('#params').val(JSON.stringify(data.params));\r\n\r\n\t\t\tuploadModal.find('#fileUploadSubmitBtn').on('click', function () {\r\n\t\t\t\t$(this).addClass('disabled');\r\n\t\t\t\tuploadForm.submit();\r\n\t\t\t});\r\n\r\n\t\t\tuploadForm.submit(function () {\r\n\t\t\t\tonSubmit(uploadModal, fileSize, callback);\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tmodule.hideAlerts = function (modal) {\r\n\t\t$(modal).find('#alert-status, #alert-success, #alert-error, #upload-progress-box').addClass('hide');\r\n\t};\r\n\r\n\tfunction onSubmit(uploadModal, fileSize, callback) {\r\n\t\tfunction showAlert(type, message) {\r\n\t\t\tmodule.hideAlerts(uploadModal);\r\n\t\t\tif (type === 'error') {\r\n\t\t\t\tuploadModal.find('#fileUploadSubmitBtn').removeClass('disabled');\r\n\t\t\t}\r\n\t\t\tuploadModal.find('#alert-' + type).translateText(message).removeClass('hide');\r\n\t\t}\r\n\r\n\t\tshowAlert('status', '[[uploads:uploading-file]]');\r\n\r\n\t\tuploadModal.find('#upload-progress-bar').css('width', '0%');\r\n\t\tuploadModal.find('#upload-progress-box').show().removeClass('hide');\r\n\r\n\t\tvar fileInput = uploadModal.find('#fileInput');\r\n\t\tif (!fileInput.val()) {\r\n\t\t\treturn showAlert('error', '[[uploads:select-file-to-upload]]');\r\n\t\t}\r\n\t\tif (!hasValidFileSize(fileInput[0], fileSize)) {\r\n\t\t\treturn showAlert('error', '[[error:file-too-big, ' + fileSize + ']]');\r\n\t\t}\r\n\r\n\t\tuploadModal.find('#uploadForm').ajaxSubmit({\r\n\t\t\theaders: {\r\n\t\t\t\t'x-csrf-token': config.csrf_token,\r\n\t\t\t},\r\n\t\t\terror: function (xhr) {\r\n\t\t\t\txhr = maybeParse(xhr);\r\n\t\t\t\tshowAlert('error', xhr.responseJSON ? (xhr.responseJSON.error || xhr.statusText) : 'error uploading, code : ' + xhr.status);\r\n\t\t\t},\r\n\t\t\tuploadProgress: function (event, position, total, percent) {\r\n\t\t\t\tuploadModal.find('#upload-progress-bar').css('width', percent + '%');\r\n\t\t\t},\r\n\t\t\tsuccess: function (response) {\r\n\t\t\t\tresponse = maybeParse(response);\r\n\r\n\t\t\t\tif (response.error) {\r\n\t\t\t\t\treturn showAlert('error', response.error);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(response[0].url);\r\n\r\n\t\t\t\tshowAlert('success', '[[uploads:upload-success]]');\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tmodule.hideAlerts(uploadModal);\r\n\t\t\t\t\tuploadModal.modal('hide');\r\n\t\t\t\t}, 750);\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tfunction parseModal(tplVals, callback) {\r\n\t\ttemplates.parse('partials/modals/upload_file_modal', tplVals, function (html) {\r\n\t\t\ttranslator.translate(html, callback);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction maybeParse(response) {\r\n\t\tif (typeof response === 'string') {\r\n\t\t\ttry {\r\n\t\t\t\treturn $.parseJSON(response);\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn { error: '[[error:parse-error]]' };\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn response;\r\n\t}\r\n\r\n\tfunction hasValidFileSize(fileElement, maxSize) {\r\n\t\tif (window.FileReader && maxSize) {\r\n\t\t\treturn fileElement.files[0].size <= maxSize * 1000;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn module;\r\n});\r\n"]}